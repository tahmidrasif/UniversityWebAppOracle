Creating User Table

-- CREATE TABLE USERS (
-- "USERID" INT NOT NULL ,
-- "USERNAME" VARCHAR2(255) NOT NULL ,
-- "PASSWORD" VARCHAR2(255) NOT NULL ,
-- "EMAIL" VARCHAR2(255) NOT NULL ,
-- "USERTYPE" VARCHAR2(255) NOT NULL ,
-- PRIMARY KEY ("USERID")
-- )
-- NOCOMPRESS
-- ;

-- DROP SEQUENCE USERS_sequence; 



-- CREATE SEQUENCE USERS_sequence
-- START WITH 1
-- INCREMENT BY 1;


-- CREATE OR REPLACE TRIGGER USERS_trigger
-- BEFORE INSERT
-- ON USERS
-- REFERENCING NEW AS NEW
-- FOR EACH ROW
-- BEGIN
-- SELECT USERS_sequence.nextval INTO :NEW.USERID FROM dual;
-- END;
-- /

-- 
-- INSERT INTO USERS (USERNAME,PASSWORD,EMAIL,USERTYPE) VALUES ('Matt','pass','matt@mail.com','Admin');


Creating Department Table

-- CREATE TABLE DEPARTMENT (
-- "DEPARTMENTID" INT NOT NULL ,
-- "NAME" VARCHAR2(255) NOT NULL ,
-- "CODE" VARCHAR2(255) NOT NULL ,
-- PRIMARY KEY ("DEPARTMENTID")
-- )
-- NOCOMPRESS
-- ;
-- 

-- 
-- CREATE SEQUENCE DEPARTMENT_sequence
-- START WITH 1
-- INCREMENT BY 1;
-- 

-- CREATE OR REPLACE TRIGGER DEPARTMENT_trigger
-- BEFORE INSERT
-- ON DEPARTMENT
-- REFERENCING NEW AS NEW
-- FOR EACH ROW
-- BEGIN
-- SELECT DEPARTMENT_sequence.nextval INTO :NEW.DEPARTMENTID FROM dual;
-- END;
-- /
-- 
-- 





CREATE TABLE COURSE (
"COURSEID" INT NOT NULL ,
"NAME" VARCHAR2(255) NULL ,
"CODE" VARCHAR2(255) NULL ,
"CREDIT" FLOAT NULL ,
"DEPARTMENTID" INT NULL ,
PRIMARY KEY ("COURSEID")
)
NOCOMPRESS
;
-- CREATE SEQUENCE COURSE_sequence
-- START WITH 1
-- INCREMENT BY 1;

-- 
-- CREATE OR REPLACE TRIGGER COURSE_trigger
-- BEFORE INSERT
-- ON COURSE
-- REFERENCING NEW AS NEW
-- FOR EACH ROW
-- BEGIN
-- SELECT COURSE_sequence.nextval INTO :NEW.COURSEID FROM dual;
-- END;
-- /
-- -- 




CREATE TABLE STUDENT (
"STUDENTID" INT NOT NULL ,
"REGISTRATIONNO" VARCHAR2(255) NOT NULL ,
"NAME" VARCHAR2(255) NULL ,
"ADDRESS" VARCHAR2(255) NULL ,
"CGPA" FLOAT NULL ,
"IMAGEPATH" VARCHAR2(255) NULL ,
"DEPARTMENTID" INT NULL ,
"USERID" INT NULL ,
PRIMARY KEY ("STUDENTID")
)
NOCOMPRESS
;

-- CREATE SEQUENCE STUDENT_sequence
-- START WITH 1
-- INCREMENT BY 1;

-- 
-- CREATE OR REPLACE TRIGGER STUDENT_trigger
-- BEFORE INSERT
-- ON STUDENT
-- REFERENCING NEW AS NEW
-- FOR EACH ROW
-- BEGIN
-- SELECT STUDENT_sequence.nextval INTO :NEW.STUDENTID FROM dual;
-- END;
-- /
-- -- 



-- CREATE TABLE TEACHER (
-- "TEACHERID" INT NOT NULL ,
-- "USERID" INT NOT NULL ,
-- "NAME" VARCHAR2(255) NULL ,
-- "DESIGNATION" VARCHAR2(255) NOT NULL ,
-- "EMAIL" VARCHAR2(255) NULL ,
-- "CREDTITOBETAKEN" FLOAT NULL ,
-- "REMAININGCREDIT" FLOAT NULL ,
-- "DEPARTMENTID" INT NULL ,
-- PRIMARY KEY ("TEACHERID")
-- )
-- NOCOMPRESS
;

-- CREATE SEQUENCE TEACHER_sequence
-- START WITH 1
-- INCREMENT BY 1;
-- 
-- CREATE OR REPLACE TRIGGER TEACHER_trigger
-- BEFORE INSERT
-- ON TEACHER
-- REFERENCING NEW AS NEW
-- FOR EACH ROW
-- BEGIN
-- SELECT TEACHER_sequence.nextval INTO :NEW.TEACHERID FROM dual;
-- END;
-- /
-- -- 




CREATE TABLE ROOM(
"ROOMID" INT NOT NULL ,
"ROOMNUMBER" VARCHAR2(255) NULL ,
"CAPACITY" INT NULL ,
"DEPARTMENTID" INT NULL ,
PRIMARY KEY ("ROOMID")
)
NOCOMPRESS
;

CREATE SEQUENCE ROOM_sequence
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER ROOM_trigger
BEFORE INSERT
ON ROOM
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
SELECT ROOM_sequence.nextval INTO :NEW.ROOMID FROM dual;
END;
/





CREATE TABLE COURSETEACHERENROLL (
"COURSETEACHERENROLLID" INT NOT NULL ,
"TEACHERID" INT NULL ,
"COURSEID" INT NULL ,
"SEMESTER" VARCHAR2(255) NULL ,
"ENROLLDATE" DATE NULL ,
PRIMARY KEY ("COURSETEACHERENROLLID")
)
NOCOMPRESS
;


CREATE SEQUENCE COURSETEACHERENROLL_sequence
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER COURSETEACHERENROLL_trigger
BEFORE INSERT
ON COURSETEACHERENROLL
REFERENCING NEW AS NEW
FOR EACH ROW
BEGIN
SELECT COURSETEACHERENROLL_sequence.nextval INTO :NEW.COURSETEACHERENROLLID FROM dual;
END;
/























